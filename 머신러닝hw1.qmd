# 금융공학 인공지능 및 기계학습 과제1 {.unnumbered}

20249132 김형환

## Question 1

![](image/machine_hw1_1.png)

### Answer

```{python}
import numpy as np
np.random.seed(123)
xtrain = 2 * np.random.rand(100, 3)
ytrain = 6 + xtrain @ np.array([[3],[2],[5]]) + np.random.randn(100, 1)
xtest = 2 * np.random.rand(20, 3)
ytest = 6 + xtest @ np.array([[3],[2],[5]]) + np.random.randn(20,1)

# (1)
def gradient_descent_steps(xtrain, ytrain, iters):
    m, n = xtrain.shape
    X = np.insert(xtrain, 0, 1, axis = 1)
    Y = ytrain
    theta = np.ones(n+1).reshape(n+1,1)
    for i in range(iters):
        theta_old = theta.copy()
        gradient = X.T @ (X @ theta_old - Y) / m
        theta = theta_old - 0.01 * gradient
    return theta

w_pred = gradient_descent_steps(xtrain, ytrain, iters=5000)
print( w_pred )

# (2)
mse = np.mean((np.insert(xtest,0,1,axis = 1) @ w_pred - ytest)**2)
print(mse)
```

## Question 2

![](image/machine_hw1_2.png)

![](image/machine_hw1_3.png)

```{python}
from sklearn.datasets import fetch_california_housing
fetch_california_housing
```


## Question 3

![](image/machine_hw1_4.png)